#!/usr/bin/env node

/**
 * Quick AWS Credentials Fix
 * This script helps you quickly set up working AWS credentials
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

function askQuestion(question) {
    return new Promise((resolve) => {
        rl.question(question, resolve);
    });
}

async function fixCredentials() {
    console.log('üîß AWS Credentials Quick Fix\n');

    console.log('üìã You need to get AWS credentials from:');
    console.log('   https://console.aws.amazon.com/iam/home#/users\n');

    console.log('üîë Create a new user or use existing user with these permissions:');
    console.log('   - AmazonComprehendFullAccess');
    console.log('   - AmazonDynamoDBFullAccess');
    console.log('   - AmazonS3FullAccess');
    console.log('   - AmazonSNSFullAccess');
    console.log('   - AmazonSQSFullAccess');
    console.log('   - AmazonRekognitionFullAccess');
    console.log('   - SecretsManagerReadWrite');
    console.log('   - CloudWatchFullAccess\n');

    const accessKeyId = await askQuestion('Enter your AWS_ACCESS_KEY_ID (starts with AKIA...): ');
    const secretAccessKey = await askQuestion('Enter your AWS_SECRET_ACCESS_KEY: ');
    const region = await askQuestion('Enter your AWS_REGION (default: us-east-1): ') || 'us-east-1';

    // Create .env content
    const envContent = `# AWS Credentials Configuration
# Generated by fix-credentials.js

AWS_ACCESS_KEY_ID=${accessKeyId}
AWS_SECRET_ACCESS_KEY=${secretAccessKey}
AWS_REGION=${region}

# DynamoDB Configuration
DYNAMODB_ENDPOINT=
DYNAMODB_REGION=${region}

# SNS Configuration (for notifications)
SNS_TOPIC_ARN=
SNS_REGION=${region}

# Comprehend Configuration
COMPREHEND_REGION=${region}

# Social Media API Keys (optional - for real API integration)
TWITTER_BEARER_TOKEN=
REDDIT_CLIENT_ID=
REDDIT_CLIENT_SECRET=
REDDIT_USER_AGENT=
`;

    // Write .env file
    const envPath = path.join(__dirname, '..', '.env');
    try {
        fs.writeFileSync(envPath, envContent);
        console.log('\n‚úÖ .env file updated successfully!');
        console.log(`üìÅ Location: ${envPath}`);
    } catch (error) {
        console.log('\n‚ùå Error updating .env file:', error.message);
        return;
    }

    console.log('\nüß™ Testing AWS credentials...');

    // Test credentials
    try {
        const { DynamoDBClient, ListTablesCommand } = require('@aws-sdk/client-dynamodb');

        const client = new DynamoDBClient({
            region: region,
            credentials: {
                accessKeyId: accessKeyId,
                secretAccessKey: secretAccessKey
            }
        });

        const command = new ListTablesCommand({});
        await client.send(command);

        console.log('‚úÖ AWS credentials are working!');
        console.log('\nüéâ You can now run:');
        console.log('   npm run comprehensive-system');
        console.log('   node test-aws-credentials.js');

    } catch (error) {
        console.log('‚ùå AWS credentials test failed:', error.message);
        console.log('\nüîç Please check:');
        console.log('   ‚Ä¢ Access Key ID is correct');
        console.log('   ‚Ä¢ Secret Access Key is correct');
        console.log('   ‚Ä¢ User has proper permissions');
        console.log('   ‚Ä¢ Region is correct');
    }

    rl.close();
}

// Run the fix
fixCredentials().catch(console.error);
